{"version":3,"sources":["images/figures.png","stores/UserStore.js","InputField.js","SubmitButton.js","LoginForm.js","RegisterForm.js","MenuButton.js","ChangePswrd.js","Statistics.js","Game/Game.js","Menu.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","extendObservable","this","loading","isLoggedIn","username","InputField","className","type","props","placeholder","value","onChange","e","target","React","Component","SubmitButton","disabled","onClick","text","LoginForm","state","password","buttonDisabled","property","val","trim","length","setState","fetch","method","headers","body","JSON","stringify","res","json","result","success","UserStore","alert","msg","badPassword","resetForm","console","log","setInputValue","doLogin","RegisterForm","email","test","window","confirm","badName","badEmail","doRegistration","MenuButton","ChangePswrd","oldPassword","newPassword1","newPassword2","newPassword","path","exact","render","doChangePswrd","to","component","Menu","Statistics","stats1","stats2","getStats","onlyOne","table","i","children","push","pocet_hr","prve_m","druhe_m","tretie_m","stvrte_m","colspan","id","h2_1_","h2_2_","h3_1_","h3_2_","h3_3_","h4_1_","h4_2_","h4_3_","h4_4_","matchesHistory","Game","number","boardCanvas","boardCxt","diceCanvas","diceCxt","lineWidth","strokeStyle","colors","topLeftHCircleX","topLeftHCircleY","fillStyle","fillRect","width","height","homeSize","beginPath","moveTo","lineTo","closePath","fill","j","arc","pathSize","Math","PI","stroke","rect","image","Image","src","onload","drawImage","document","getElementById","getContext","draw","addEventListener","diceInterval","setInterval","num","floor","random","clearRect","setTimeout","clearInterval","doLogout","App","figures","alt","observer","Boolean","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3febfbe4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/figures.612e7f2b.png\";","import { extendObservable } from 'mobx';\r\n\r\n/* UserStore  */\r\nclass UserStore {\r\n    constructor() {\r\n        extendObservable(this, {\r\n            loading: true,\r\n            isLoggedIn: false,\r\n            username:'',\r\n        })\r\n    }\r\n}\r\n\r\nexport default new UserStore();","import React from 'react';\r\n\r\nclass InputField extends React.Component{\r\n    render() {\r\n        return (\r\n            <div className=\"inputField\">\r\n\r\n                <input\r\n                    className='input'\r\n                    type={this.props.type}\r\n                    placeholder={this.props.placeholder}\r\n                    value={this.props.value}\r\n                    onChange={(e) => this.props.onChange(e.target.value)}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default InputField;","import React from 'react';\r\n\r\nclass SubmitButton extends React.Component{\r\n    render() {\r\n        return (\r\n            <div className=\"submitButton\">\r\n                <button\r\n                    className='sBtn'\r\n                    disabled={this.props.disabled}\r\n                    onClick={() => this.props.onClick()}\r\n                >\r\n                    {this.props.text}\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SubmitButton;","import React from 'react';\r\nimport InputField from './InputField';\r\nimport SubmitButton from \"./SubmitButton\";\r\nimport UserStore from \"./stores/UserStore\";\r\n\r\nclass LoginForm extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            username:'',\r\n            password:'',\r\n            buttonDisabled: false\r\n        }\r\n    }\r\n\r\n    setInputValue(property, val) {\r\n        val = val.trim();    /*odstrani medzery zo zaciatku a konca*/\r\n        if (val.length > 15) {\r\n            return;\r\n        }\r\n        this.setState({\r\n            [property]: val\r\n        })\r\n    }\r\n\r\n    resetForm(type) {\r\n        if (type === 1) {\r\n            this.setState({\r\n                username: '',\r\n                password: '',\r\n                buttonDisabled: false\r\n            })\r\n        } else if (type === 2) {\r\n            this.setState({\r\n                password: '',\r\n                buttonDisabled: false\r\n            })\r\n        }\r\n    }\r\n\r\n    async doLogin() {\r\n        if(!this.state.username) {\r\n            return;\r\n        }\r\n        if(!this.state.password) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            buttonDisabled: true\r\n        })\r\n\r\n        try {\r\n            let res = await fetch('/login', {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    username: this.state.username,\r\n                    password: this.state.password\r\n                })\r\n            });\r\n\r\n            let result = await res.json();\r\n            if(result && result.success) {\r\n                UserStore.isLoggedIn = true;\r\n                UserStore.username = result.username;\r\n            } else if(result && result.success === false) {\r\n                alert(result.msg);\r\n                if (result.badPassword) {\r\n                    this.resetForm(2);\r\n                } else {\r\n                    this.resetForm(1);\r\n                }\r\n            }\r\n        } catch(e) {\r\n            console.log(e);\r\n            this.resetForm(1);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"loginForm\">\r\n                Login\r\n                <InputField\r\n                    type='text'\r\n                    placeholder='Username'\r\n                    value={this.state.username ? this.state.username : ''}\r\n                    onChange={ (val) => this.setInputValue('username', val) }\r\n                />\r\n                <InputField\r\n                    type='password'\r\n                    placeholder='Password'\r\n                    value={this.state.password ? this.state.password : ''}\r\n                    onChange={ (val) => this.setInputValue('password', val) }\r\n                />\r\n\r\n                <SubmitButton\r\n                    text='Log in'\r\n                    disabled={this.state.buttonDisabled}\r\n                    onClick={ () => this.doLogin() }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginForm;","import React from \"react\";\r\nimport InputField from './InputField';\r\nimport SubmitButton from \"./SubmitButton\";\r\n\r\nclass RegisterForm extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            username:'',\r\n            email:'',\r\n            password:'',\r\n            buttonDisabled: false\r\n        }\r\n    }\r\n\r\n    setInputValue(property, val) {\r\n        val = val.trim();    /*odstrani medzery zo zaciatku a konca*/\r\n\r\n        if(property === 'email') {\r\n            if (val.length > 25) {\r\n                return;\r\n            }\r\n        } else if (val.length > 15) {\r\n            return;\r\n        }\r\n        this.setState({\r\n            [property]: val\r\n        })\r\n    }\r\n\r\n    resetForm(type) {\r\n        if (type === 1) {\r\n            this.setState({\r\n                username: '',\r\n                email: '',\r\n                password: '',\r\n                buttonDisabled: false\r\n            })\r\n        } else if (type === 2) {\r\n            this.setState({\r\n                username: '',\r\n                buttonDisabled: false\r\n            })\r\n        } else if (type === 3) {\r\n            this.setState({\r\n                email: '',\r\n                buttonDisabled: false\r\n            })\r\n        }\r\n    }\r\n\r\n    async doRegistration() {\r\n        if(!this.state.username) {\r\n            return;\r\n        }\r\n\r\n        if(!this.state.email) {\r\n            return;\r\n        }\r\n\r\n        if(!this.state.password) {\r\n            return;\r\n        }\r\n\r\n        var re = /^[a-zA-Z0-9]+@(?:[a-zA-Z0-9]+\\.)+[A-Za-z]+$/ ;\r\n        if(!re.test(this.state.email)) {\r\n            alert('An error occurred, invalid email !!!');\r\n            this.resetForm(3);\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            buttonDisabled: true\r\n        })\r\n\r\n        try {\r\n            let res = await fetch('/registration', {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    username: this.state.username,\r\n                    email: this.state.email,\r\n                    password: this.state.password\r\n                })\r\n            });\r\n\r\n            let result = await res.json();\r\n            if(result && result.success) {\r\n               window.confirm(result.msg);\r\n               this.resetForm(1);\r\n            } else if(result && result.success === false) {\r\n\r\n                alert(result.msg);\r\n                if (result.badName && result.badEmail) {\r\n                    this.resetForm(1);\r\n                } else if (result.badName) {\r\n                    this.resetForm(2);\r\n                } else if (result.badEmail) {\r\n                    this.resetForm(3);\r\n                } else {\r\n                    this.resetForm(1);\r\n                }\r\n            }\r\n        } catch(e) {\r\n            console.log(e);\r\n            this.resetForm(1);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"registerForm\">\r\n                Registration\r\n                <InputField\r\n                    type='text'\r\n                    placeholder='Username'\r\n                    value={this.state.username ? this.state.username : ''}\r\n                    onChange={ (val) => this.setInputValue('username', val) }\r\n                />\r\n                <InputField\r\n                    type='email'\r\n                    placeholder='Email'\r\n                    value={this.state.email ? this.state.email : ''}\r\n                    onChange={ (val) => this.setInputValue('email', val) }\r\n                />\r\n                <InputField\r\n                    type='password'\r\n                    placeholder='Password'\r\n                    value={this.state.password ? this.state.password : ''}\r\n                    onChange={ (val) => this.setInputValue('password', val) }\r\n                />\r\n\r\n                <SubmitButton\r\n                    text='Register'\r\n                    disabled={this.state.buttonDisabled}\r\n                    onClick={ () => this.doRegistration() }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RegisterForm;","import React from 'react';\r\n\r\nclass MenuButton extends React.Component{\r\n    render() {\r\n        return (\r\n            <div className=\"menuButton\">\r\n                <button\r\n                    className='mBtn'\r\n                    disabled={this.props.disabled}\r\n                >\r\n                    {this.props.text}\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MenuButton;","import React from 'react';\r\nimport {BrowserRouter as Router, Switch, Route, Link} from \"react-router-dom\";\r\nimport MenuButton from \"./MenuButton\";\r\nimport SubmitButton from \"./SubmitButton\";\r\nimport InputField from \"./InputField\";\r\nimport UserStore from \"./stores/UserStore\";\r\nimport Menu from \"./Menu\";\r\n\r\nclass ChangePswrd extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            username: UserStore.username,\r\n            oldPassword:'',\r\n            newPassword1:'',\r\n            newPassword2:'',\r\n            buttonDisabled: false\r\n        }\r\n    }\r\n\r\n    setInputValue(property, val) {\r\n        val = val.trim();\r\n        if (val.length > 15) {\r\n            return;\r\n        }\r\n        this.setState({\r\n            [property]: val\r\n        })\r\n    }\r\n\r\n   resetForm(type) {\r\n        if (type === 1) {\r\n            this.setState({\r\n                oldPassword:'',\r\n                newPassword1:'',\r\n                newPassword2:'',\r\n                buttonDisabled: false\r\n            })\r\n        } else if (type === 2) {\r\n            this.setState({\r\n                oldPassword:'',\r\n                buttonDisabled: false\r\n            })\r\n        } else if (type === 3) {\r\n            this.setState({\r\n                newPassword1:'',\r\n                newPassword2:'',\r\n                buttonDisabled: false\r\n            })\r\n        }\r\n    }\r\n\r\n    async doChangePswrd() {\r\n        if(!this.state.oldPassword) {\r\n            return;\r\n        }\r\n        if(!this.state.newPassword1) {\r\n            return;\r\n        }\r\n        if(!this.state.newPassword2) {\r\n            return;\r\n        }\r\n        if(this.state.newPassword1 !== this.state.newPassword2){\r\n            alert('Error, your new password and confirmation password do not match !!!');\r\n            this.resetForm(3);\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            buttonDisabled: true\r\n        })\r\n\r\n        try {\r\n            let res = await fetch('/changePassword', {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    username: this.state.username,\r\n                    oldPassword: this.state.oldPassword,\r\n                    newPassword: this.state.newPassword1\r\n                })\r\n            });\r\n\r\n            let result = await res.json();\r\n            if(result && result.success) {\r\n                window.confirm(result.msg);\r\n                this.resetForm(1);\r\n            } else if(result && result.success === false) {\r\n                alert(result.msg);\r\n                this.resetForm(2);\r\n            }\r\n        } catch(e) {\r\n            console.log(e);\r\n            this.resetForm(1);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <Router>\r\n                    <Route path=\"/changePassword\" exact render={() => {\r\n                        return (\r\n                            <div className=\"changePswrd\">\r\n                                <div className=\"changeForm\">\r\n                                    <div className=\"row-Pswrd\">\r\n                                        <label>Password</label>\r\n                                        <InputField\r\n                                            type='password'\r\n                                            placeholder='Password'\r\n                                            value={this.state.oldPassword ? this.state.oldPassword : ''}\r\n                                            onChange={ (val) => this.setInputValue('oldPassword', val) }\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"row-NewPswrd\">\r\n                                        <label>New password</label>\r\n                                         <InputField\r\n                                             type='password'\r\n                                             placeholder='New password'\r\n                                             value={this.state.newPassword1 ? this.state.newPassword1 : ''}\r\n                                             onChange={ (val) => this.setInputValue('newPassword1', val) }\r\n                                         />\r\n                                    </div>\r\n                                    <div className=\"row-ConfPswrd\">\r\n                                         <label>Confirm new password</label>\r\n                                         <InputField\r\n                                             type='password'\r\n                                             placeholder='Confirm password'\r\n                                             value={this.state.newPassword2 ? this.state.newPassword2 : ''}\r\n                                             onChange={ (val) => this.setInputValue('newPassword2', val) }\r\n                                         />\r\n                                    </div>\r\n                                    <div className=\"row-ChangeBtn\">\r\n                                        <SubmitButton\r\n                                            text='Change Password'\r\n                                            disabled={this.state.buttonDisabled}\r\n                                            onClick={ () => this.doChangePswrd() }\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"backBtn\">\r\n                                    <Link to='/'>\r\n                                        <MenuButton\r\n                                            text = {'Back'}\r\n                                            disabled={this.state.buttonDisabled}\r\n                                        />\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    }}/>\r\n\r\n                    <Switch>\r\n                        <Route exact path=\"/\" component={Menu} />\r\n                    </Switch>\r\n                </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ChangePswrd;","import React from \"react\";\r\nimport UserStore from \"./stores/UserStore\";\r\nimport MenuButton from \"./MenuButton\";\r\nimport {BrowserRouter as Router, Link, Route, Switch} from \"react-router-dom\";\r\nimport Menu from \"./Menu\";\r\n\r\nclass Statistics extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state= {\r\n            username: UserStore.username,\r\n            stats1: [],\r\n            stats2: []\r\n        }\r\n        this.getStats();\r\n    }\r\n\r\n    async getStats() {\r\n        try {\r\n            let res = await fetch('/statistics', {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    username: this.state.username\r\n                })\r\n            });\r\n\r\n            let result = await res.json();\r\n            if(result && result.success) {\r\n                if(result.onlyOne){\r\n                    this.setState({\r\n                        stats1: result.stats1\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        stats1: result.stats1,\r\n                        stats2: result.stats2\r\n                    })\r\n                }\r\n            } else if(result && result.success === false) {\r\n                alert(result.msg);\r\n            }\r\n        } catch(e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    matchesHistory() {\r\n        if(this.state.stats2.length > 0) {\r\n            let table = [];\r\n\r\n            for (let i = 0; i < this.state.stats2.length; i++) {\r\n                let children = [];\r\n\r\n                children.push(<td>{this.state.stats2[i].pocet_hr}</td>);\r\n                children.push(<td>{this.state.stats2[i].prve_m}</td>);\r\n                children.push(<td>{this.state.stats2[i].druhe_m}</td>);\r\n                children.push(<td>{this.state.stats2[i].tretie_m}</td>);\r\n                children.push(<td>{this.state.stats2[i].stvrte_m}</td>);\r\n\r\n                table.push(<tr>{children}</tr>);\r\n            }\r\n            return table;\r\n        } else {\r\n            return <tr><td colspan=\"5\">You didn't play any matches</td></tr>\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <Router>\r\n                    <Route path=\"/statistics\" exact render={() => {\r\n                        return (\r\n                            <div className=\"statistics\">\r\n                                <div className=\"statsForm\">\r\n                                    <div className=\"row-twoPG\">\r\n                                        <table>\r\n                                            <caption>Two Player Game</caption>\r\n                                            <tr>\r\n                                                <th id=\"th1\">1. place</th>\r\n                                                <th id=\"th2\">2. place</th>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>{this.state.stats1.h2_1_}</td>\r\n                                                <td>{this.state.stats1.h2_2_}</td>\r\n                                            </tr>\r\n                                        </table>\r\n                                    </div>\r\n                                    <div className=\"row-threePG\">\r\n                                        <table>\r\n                                            <caption>Three Player Game</caption>\r\n                                            <tr>\r\n                                                <th id=\"th1\">1. place</th>\r\n                                                <th id=\"th2\">2. place</th>\r\n                                                <th id=\"th3\">3. place</th>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>{this.state.stats1.h3_1_}</td>\r\n                                                <td>{this.state.stats1.h3_2_}</td>\r\n                                                <td>{this.state.stats1.h3_3_}</td>\r\n                                            </tr>\r\n                                        </table>\r\n                                    </div>\r\n                                    <div className=\"row-fourPG\">\r\n                                        <table>\r\n                                            <caption>Four Player Game</caption>\r\n                                            <tr>\r\n                                                <th id=\"th1\">1. place</th>\r\n                                                <th id=\"th2\">2. place</th>\r\n                                                <th id=\"th3\">3. place</th>\r\n                                                <th id=\"th4\">4. place</th>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>{this.state.stats1.h4_1_}</td>\r\n                                                <td>{this.state.stats1.h4_2_}</td>\r\n                                                <td>{this.state.stats1.h4_3_}</td>\r\n                                                <td>{this.state.stats1.h4_4_}</td>\r\n                                            </tr>\r\n                                        </table>\r\n                                    </div>\r\n                                    <div className=\"row-matchesH\">\r\n                                        <table>\r\n                                            <caption>Matches History</caption>\r\n                                            <tr>\r\n                                                <th>Num. of players</th>\r\n                                                <th id=\"th1\">1. place</th>\r\n                                                <th id=\"th2\">2. place</th>\r\n                                                <th id=\"th3\">3. place</th>\r\n                                                <th id=\"th4\">4. place</th>\r\n                                            </tr>\r\n                                            {this.matchesHistory()}\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"backBtn\">\r\n                                    <Link to='/'>\r\n                                        <MenuButton\r\n                                            text = {'Back'}\r\n                                            disabled={false}\r\n                                        />\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    }}/>\r\n                    <Switch>\r\n                        <Route exact path=\"/\" component={Menu} />\r\n                    </Switch>\r\n                </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Statistics;","import React from 'react';\r\n\r\n\r\nclass Game extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state= {\r\n            number: 0\r\n        }\r\n    }\r\n\r\n    draw (boardCanvas, boardCxt, diceCanvas, diceCxt) {\r\n        var homeSize = 240;\r\n        var pathSize = 40;\r\n        var homeCircleSize = pathSize / 2;\r\n        boardCxt.lineWidth = 1;\r\n        boardCxt.strokeStyle = '#000000';\r\n        var colors = ['red', 'green', 'blue', 'yellow'];\r\n        var topLeftHCircleX =  2 * pathSize;\r\n        var topLeftHCircleY = 2 * pathSize;\r\n\r\n        boardCxt.fillStyle = '#FFFFFF';\r\n        boardCxt.fillRect(0, 0, boardCanvas.width, boardCanvas.height);\r\n\r\n        /*Red*/\r\n        boardCxt.fillStyle = colors[0];\r\n        boardCxt.fillRect(0, 0, homeSize, homeSize);\r\n\r\n        boardCxt.fillRect(pathSize, homeSize, pathSize, pathSize);\r\n        boardCxt.fillRect(pathSize, homeSize + pathSize, 5 * pathSize, pathSize);\r\n\r\n        boardCxt.beginPath();\r\n        boardCxt.moveTo(homeSize, homeSize);\r\n        boardCxt.lineTo(boardCanvas.width / 2, boardCanvas.height / 2);\r\n        boardCxt.lineTo(homeSize, homeSize + (3 * pathSize));\r\n        boardCxt.closePath();\r\n        boardCxt.fill();\r\n\r\n        boardCxt.beginPath();\r\n        boardCxt.moveTo(0, homeSize + pathSize);\r\n        boardCxt.lineTo(pathSize, boardCanvas.height / 2);\r\n        boardCxt.lineTo(0, homeSize + (2 * pathSize));\r\n        boardCxt.closePath();\r\n        boardCxt.fill();\r\n\r\n        boardCxt.fillStyle = '#FFFFFF';\r\n        boardCxt.fillRect(pathSize, pathSize, homeSize - (2 * pathSize), homeSize - (2 * pathSize));\r\n\r\n        boardCxt.fillStyle = colors[0];\r\n        topLeftHCircleX =  2 * pathSize;\r\n        topLeftHCircleY = 2 * pathSize;\r\n        for (let i = 0; i < 2; i++) {\r\n            for (let j = 0; j < 2; j++) {\r\n                boardCxt.beginPath();\r\n                boardCxt.arc(topLeftHCircleX + (i * 2 * pathSize), topLeftHCircleY + (j * 2 * pathSize), homeCircleSize, 0, 2 * Math.PI);\r\n                boardCxt.fill();\r\n\r\n                boardCxt.stroke();\r\n            }\r\n        }\r\n\r\n        boardCxt.beginPath();\r\n        boardCxt.moveTo(0, homeSize);\r\n        boardCxt.lineTo(homeSize, homeSize);\r\n        boardCxt.stroke();\r\n\r\n        boardCxt.beginPath();\r\n        boardCxt.moveTo(homeSize, 0);\r\n        boardCxt.lineTo(homeSize, homeSize);\r\n        boardCxt.stroke();\r\n\r\n        /*Green*/\r\n        boardCxt.fillStyle = colors[1];\r\n        boardCxt.fillRect(boardCanvas.width - homeSize, 0, homeSize, homeSize);\r\n\r\n        boardCxt.fillRect(boardCanvas.width - homeSize - pathSize, pathSize, pathSize, pathSize);\r\n        boardCxt.fillRect(homeSize + pathSize, pathSize, pathSize, 5* pathSize);\r\n\r\n        boardCxt.beginPath();\r\n        boardCxt.moveTo(homeSize, homeSize);\r\n        boardCxt.lineTo(boardCanvas.width / 2, boardCanvas.height / 2);\r\n        boardCxt.lineTo(homeSize + (3 * pathSize), homeSize);\r\n        boardCxt.closePath();\r\n        boardCxt.fill();\r\n\r\n        boardCxt.beginPath();\r\n        boardCxt.moveTo(homeSize + pathSize, 0);\r\n        boardCxt.lineTo(boardCanvas.width / 2, pathSize);\r\n        boardCxt.lineTo(homeSize + (2 * pathSize), 0);\r\n        boardCxt.closePath();\r\n        boardCxt.fill();\r\n\r\n        boardCxt.fillStyle = '#FFFFFF';\r\n        boardCxt.fillRect(boardCanvas.width - homeSize + pathSize, pathSize, homeSize - (2 * pathSize), homeSize - (2 * pathSize));\r\n\r\n        boardCxt.fillStyle = colors[1];\r\n        topLeftHCircleX = boardCanvas.width - homeSize + 2 * pathSize;\r\n        topLeftHCircleY = 2 * pathSize;\r\n        for (let i = 0; i < 2; i++) {\r\n            for (let j = 0; j < 2; j++) {\r\n                boardCxt.beginPath();\r\n                boardCxt.arc(topLeftHCircleX + (i * 2 * pathSize), topLeftHCircleY + (j * 2 * pathSize), homeCircleSize, 0, 2 * Math.PI);\r\n                boardCxt.fill();\r\n\r\n                boardCxt.stroke();\r\n            }\r\n        }\r\n\r\n        boardCxt.beginPath();\r\n        boardCxt.moveTo(boardCanvas.width - homeSize, 0);\r\n        boardCxt.lineTo(boardCanvas.width - homeSize, homeSize);\r\n        boardCxt.stroke();\r\n\r\n        boardCxt.beginPath();\r\n        boardCxt.moveTo(boardCanvas.width - homeSize, homeSize);\r\n        boardCxt.lineTo(boardCanvas.width, homeSize);\r\n        boardCxt.stroke();\r\n\r\n        /*Blue*/\r\n        boardCxt.fillStyle = colors[2];\r\n        boardCxt.fillRect(0, boardCanvas.height - homeSize, homeSize, homeSize);\r\n\r\n        boardCxt.fillRect(homeSize, boardCanvas.height - (2 * pathSize), pathSize, pathSize);\r\n        boardCxt.fillRect(homeSize + pathSize, boardCanvas.height - homeSize, pathSize, 5 * pathSize);\r\n\r\n        boardCxt.beginPath();\r\n        boardCxt.moveTo(homeSize,  boardCanvas.height - homeSize);\r\n        boardCxt.lineTo(boardCanvas.width / 2, boardCanvas.height / 2);\r\n        boardCxt.lineTo(homeSize + (3 * pathSize), boardCanvas.height - homeSize);\r\n        boardCxt.closePath();\r\n        boardCxt.fill();\r\n\r\n        boardCxt.beginPath();\r\n        boardCxt.moveTo(homeSize + pathSize, boardCanvas.height);\r\n        boardCxt.lineTo(boardCanvas.width / 2, boardCanvas.height - pathSize);\r\n        boardCxt.lineTo(homeSize + (2 * pathSize), boardCanvas.height);\r\n        boardCxt.closePath();\r\n        boardCxt.fill();\r\n\r\n        boardCxt.fillStyle = '#FFFFFF';\r\n        boardCxt.fillRect(pathSize, boardCanvas.height - homeSize + pathSize, homeSize - (2 * pathSize), homeSize - (2 * pathSize));\r\n\r\n        boardCxt.fillStyle = colors[2];\r\n        topLeftHCircleX =  2 * pathSize;\r\n        topLeftHCircleY = boardCanvas.height - homeSize + 2 * pathSize;\r\n        for (let i = 0; i < 2; i++) {\r\n            for (let j = 0; j < 2; j++) {\r\n                boardCxt.beginPath();\r\n                boardCxt.arc(topLeftHCircleX + (i * 2 * pathSize), topLeftHCircleY + (j * 2 * pathSize), homeCircleSize, 0, 2 * Math.PI);\r\n                boardCxt.fill();\r\n\r\n                boardCxt.stroke();\r\n            }\r\n        }\r\n\r\n        boardCxt.beginPath();\r\n        boardCxt.moveTo(0, boardCanvas.height - homeSize);\r\n        boardCxt.lineTo(homeSize, boardCanvas.height - homeSize);\r\n        boardCxt.stroke();\r\n\r\n        boardCxt.beginPath();\r\n        boardCxt.moveTo(homeSize, boardCanvas.height - homeSize);\r\n        boardCxt.lineTo(homeSize, boardCanvas.height);\r\n        boardCxt.stroke();\r\n\r\n        /*Yellow*/\r\n        boardCxt.fillStyle = colors[3];\r\n        boardCxt.fillRect(boardCanvas.width - homeSize, boardCanvas.height - homeSize, homeSize, homeSize);\r\n\r\n        boardCxt.fillRect(boardCanvas.width - (2 * pathSize), homeSize + (2 * pathSize), pathSize, pathSize);\r\n        boardCxt.fillRect(boardCanvas.width - homeSize, homeSize + pathSize, 5 * pathSize, pathSize);\r\n\r\n        boardCxt.beginPath();\r\n        boardCxt.moveTo(homeSize + (3 * pathSize),  homeSize);\r\n        boardCxt.lineTo(boardCanvas.width / 2, boardCanvas.height / 2);\r\n        boardCxt.lineTo(homeSize + (3 * pathSize), boardCanvas.height - homeSize);\r\n        boardCxt.closePath();\r\n        boardCxt.fill();\r\n\r\n        boardCxt.beginPath();\r\n        boardCxt.moveTo(boardCanvas.width, homeSize + (2 * pathSize));\r\n        boardCxt.lineTo(boardCanvas.width - pathSize, boardCanvas.height / 2);\r\n        boardCxt.lineTo(boardCanvas.width, homeSize + pathSize);\r\n        boardCxt.closePath();\r\n        boardCxt.fill();\r\n\r\n        boardCxt.fillStyle = '#FFFFFF';\r\n        boardCxt.fillRect(boardCanvas.width-homeSize + pathSize, boardCanvas.height - homeSize + pathSize, homeSize - (2 * pathSize), homeSize - (2 * pathSize));\r\n\r\n        boardCxt.fillStyle = colors[3];\r\n        topLeftHCircleX = boardCanvas.width - homeSize + 2 * pathSize;\r\n        topLeftHCircleY = boardCanvas.height - homeSize + 2 * pathSize;\r\n        for (let i = 0; i < 2; i++) {\r\n            for (let j = 0; j < 2; j++) {\r\n                boardCxt.beginPath();\r\n                boardCxt.arc(topLeftHCircleX + (i * 2 * pathSize), topLeftHCircleY + (j * 2 * pathSize), homeCircleSize, 0, 2 * Math.PI);\r\n                boardCxt.fill();\r\n\r\n                boardCxt.stroke();\r\n            }\r\n        }\r\n\r\n        boardCxt.beginPath();\r\n        boardCxt.moveTo(boardCanvas.width - homeSize, boardCanvas.height - homeSize);\r\n        boardCxt.lineTo(boardCanvas.width, boardCanvas.height - homeSize);\r\n        boardCxt.stroke();\r\n\r\n        boardCxt.beginPath();\r\n        boardCxt.moveTo(boardCanvas.width - homeSize, boardCanvas.height - homeSize);\r\n        boardCxt.lineTo(boardCanvas.width - homeSize, boardCanvas.height);\r\n        boardCxt.stroke();\r\n\r\n        /*Mid*/\r\n        boardCxt.fillStyle = '#000000';\r\n        boardCxt.rect(homeSize, homeSize, 3 * pathSize, 3 * pathSize);\r\n        boardCxt.stroke();\r\n\r\n        boardCxt.beginPath();\r\n        boardCxt.moveTo(homeSize, homeSize);\r\n        boardCxt.lineTo(boardCanvas.width-homeSize, boardCanvas.height - homeSize);\r\n        boardCxt.stroke();\r\n\r\n        boardCxt.beginPath();\r\n        boardCxt.moveTo(boardCanvas.width-homeSize, homeSize);\r\n        boardCxt.lineTo(homeSize, boardCanvas.height - homeSize);\r\n        boardCxt.stroke();\r\n\r\n        /*Paths*/\r\n        for (let i = 1; i <= 2; i++) {\r\n            boardCxt.beginPath();\r\n            boardCxt.moveTo(0, homeSize + (i * pathSize));\r\n            boardCxt.lineTo(homeSize, homeSize + (i * pathSize));\r\n            boardCxt.stroke();\r\n        }\r\n        for (let i = 1; i <= 5; i++) {\r\n            boardCxt.beginPath();\r\n            boardCxt.moveTo(i * pathSize, homeSize);\r\n            boardCxt.lineTo(i * pathSize, boardCanvas.height - homeSize);\r\n            boardCxt.stroke();\r\n        }\r\n        /**/\r\n        for (let i = 1; i <= 2; i++) {\r\n            boardCxt.beginPath();\r\n            boardCxt.moveTo(homeSize + (i * pathSize), 0);\r\n            boardCxt.lineTo(homeSize + (i * pathSize), homeSize);\r\n            boardCxt.stroke();\r\n        }\r\n        for (let i = 1; i <= 5; i++) {\r\n            boardCxt.beginPath();\r\n            boardCxt.moveTo(homeSize, i * pathSize);\r\n            boardCxt.lineTo(boardCanvas.width - homeSize, i * pathSize);\r\n            boardCxt.stroke();\r\n        }\r\n        /**/\r\n        for (let i = 1; i <= 2; i++) {\r\n            boardCxt.beginPath();\r\n            boardCxt.moveTo(boardCanvas.width - homeSize, homeSize + (i * pathSize));\r\n            boardCxt.lineTo(boardCanvas.width, homeSize + (i * pathSize));\r\n            boardCxt.stroke();\r\n        }\r\n        for (let i = 1; i <= 5; i++) {\r\n            boardCxt.beginPath();\r\n            boardCxt.moveTo(boardCanvas.width - (i * pathSize), homeSize);\r\n            boardCxt.lineTo(boardCanvas.width - (i * pathSize), boardCanvas.height - homeSize);\r\n            boardCxt.stroke();\r\n        }\r\n        /**/\r\n        for (let i = 0; i <= 2; i++) {\r\n            boardCxt.beginPath();\r\n            boardCxt.moveTo(homeSize + (i * pathSize), boardCanvas.height - homeSize);\r\n            boardCxt.lineTo(homeSize + (i * pathSize), boardCanvas.height);\r\n            boardCxt.stroke();\r\n        }\r\n        for (let i = 1; i <= 5; i++) {\r\n            boardCxt.beginPath();\r\n            boardCxt.moveTo(homeSize, boardCanvas.height - (i * pathSize));\r\n            boardCxt.lineTo(boardCanvas.width - homeSize, boardCanvas.height - (i * pathSize));\r\n            boardCxt.stroke();\r\n        }\r\n\r\n        /*Dice*/\r\n        var image = new Image();\r\n        image.src = 'images-dice/dice-neutral.png';\r\n        image.onload = () => {\r\n            diceCxt.drawImage(image,0,0);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        var boardCanvas = document.getElementById('boardCanvas');\r\n        var boardCxt = boardCanvas.getContext('2d');\r\n\r\n        var diceCanvas = document.getElementById('diceCanvas');\r\n        var diceCxt = diceCanvas.getContext('2d');\r\n\r\n        this.draw(boardCanvas, boardCxt, diceCanvas, diceCxt);\r\n\r\n        diceCanvas.addEventListener('click', () => {\r\n            var diceInterval = setInterval(() => {\r\n                var num = 1 + Math.floor(Math.random() * 6);\r\n                this.setState({\r\n                    number: num\r\n                });\r\n\r\n                diceCxt.clearRect(0, 0,diceCanvas.width,diceCanvas.height);\r\n\r\n                var image = new Image();\r\n                image.src = 'images-dice/dice-' + num + '.jpg';\r\n                image.onload = () => {\r\n                    diceCxt.drawImage(image,0,0);\r\n                }\r\n            }, 50);\r\n\r\n            setTimeout(() => {\r\n                clearInterval(diceInterval);\r\n            }, 1250);\r\n        }, false);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='game'>\r\n                <canvas id=\"boardCanvas\" width=\"600\" height=\"600\" />\r\n                <canvas id=\"diceCanvas\" width=\"85\" height=\"85\" />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Game;","import React from \"react\";\r\nimport {BrowserRouter as Router, Switch, Route, Link} from \"react-router-dom\";\r\nimport UserStore from \"./stores/UserStore\";\r\nimport MenuButton from \"./MenuButton\";\r\nimport ChangePswrd from \"./ChangePswrd\";\r\nimport Statistics from \"./Statistics\"\r\nimport SubmitButton from \"./SubmitButton\";\r\nimport Game from './Game/Game';/**/\r\n\r\nclass Menu extends React.Component{\r\n   constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            buttonDisabled: false,\r\n        }\r\n   }\r\n\r\n    async doLogout() {\r\n\r\n        this.setState({\r\n            buttonDisabled: true\r\n        })\r\n\r\n        try {\r\n            let res = await fetch('/logout', {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                }\r\n            });\r\n\r\n            let result = await res.json();\r\n            if (result && result.success){\r\n                UserStore.isLoggedIn = false;\r\n                UserStore.username = '';\r\n            } else if (result && result.success === false) {\r\n                alert(result.msg);\r\n                this.setState({\r\n                    buttonDisabled: false\r\n                })\r\n            }\r\n        }\r\n        catch(e){\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"menu\">\r\n                <Router>\r\n                    <Route path=\"/\" exact render={() => {\r\n                        return (\r\n                            <div className=\"column\">\r\n                                <div className=\"row-play\">\r\n                                    <Link to='/play'>\r\n                                        <MenuButton\r\n                                            text={'Play'}\r\n                                            disabled={this.state.buttonDisabled}\r\n                                        />\r\n                                    </Link>\r\n                                </div>\r\n                                <div className=\"row-stat\">\r\n                                    <Link to='/statistics'>\r\n                                        <MenuButton\r\n                                            text = {'Statistics'}\r\n                                            disabled={this.state.buttonDisabled}\r\n                                        />\r\n                                    </Link>\r\n                                </div>\r\n                                <div className=\"row-pswrd\">\r\n                                    <Link to='/changePassword'>\r\n                                        <MenuButton\r\n                                            text = {'Change password'}\r\n                                            disabled={this.state.buttonDisabled}\r\n                                        />\r\n                                    </Link>\r\n                                </div>\r\n                                <div className=\"row-logout\">\r\n                                    <SubmitButton\r\n                                        text = {'Log out'}\r\n                                        disabled={this.state.buttonDisabled}\r\n                                        onClick={ () => this.doLogout() }\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    }}/>\r\n\r\n                    <Switch>\r\n                        <Route exact path=\"/play\" component={Game}/>\r\n                        <Route exact path=\"/statistics\" component={Statistics} />\r\n                        <Route exact path=\"/changePassword\" component={ChangePswrd} />\r\n                    </Switch>\r\n                </Router>\r\n            </div>\r\n        );\r\n   }\r\n}\r\n\r\nexport default Menu;\r\n","import React from 'react';\nimport { observer } from 'mobx-react'\nimport UserStore from './stores/UserStore';\nimport LoginForm from './LoginForm';\nimport RegisterForm from './RegisterForm';\nimport Menu from './Menu';\nimport figures from './images/figures.png';\nimport './App.css';\n\nclass App extends React.Component{\n\n  async componentDidMount() {\n\n    try {\n      let res = await fetch('/isLoggedIn', {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n        }\n      });\n\n      let result = await res.json();\n      if (result && result.success){\n        UserStore.loading = false;\n        UserStore.isLoggedIn = true;\n        UserStore.username = result.username;\n      } else {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = false;\n      }\n    }\n    catch(e){\n      UserStore.loading = false;\n      UserStore.isLoggedIn = false;\n    }\n  }\n\n  render() {\n    if(UserStore.loading){\n      return (\n          <div className=\"app\">\n            <div className='container'>\n              <div className='cont-loading'>\n                <div className='loading'>\n                  Loading, please wait...\n                </div>\n              </div>\n            </div>\n          </div>\n      );\n    } else {\n      if (UserStore.isLoggedIn) {\n        return (\n            <div className=\"app\">\n              <div className='container'>\n                <label id='player'>Player: <span className='span-name'>{UserStore.username}</span></label>\n                <Menu />\n              </div>\n            </div>\n        );\n      }\n      return (\n          <div className=\"app\">\n            <div className='container'>\n\n              <h1>Ludo game!</h1>\n\n                <div className='row'>\n                  <div className='col-log' >\n                    <LoginForm />\n                  </div>\n                  <div className='col-img' >\n                    <img src={figures} className=\"figures-image\" alt=\"Figures\" />\n                  </div>\n                  <div className='col-reg' >\n                    <RegisterForm />\n                  </div>\n                </div>\n            </div>\n          </div>\n      );\n    }\n  }\n}\n\nexport default observer(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}